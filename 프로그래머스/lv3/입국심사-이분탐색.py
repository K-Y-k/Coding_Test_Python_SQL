# 이분 탐색을 할 때는 
# ‘이분 탐색의 범위는 무엇으로 할지’ 와 ‘이분 탐색의 기준을 무엇으로 할지’을 잡아야한다.
# 범위 : 여기서는 심사를 하는데 총 걸리는 시간으로 정했다.
# 기준 :  mid 시간 동안 심사한 사람의 수(people)가
#        1. 심사 받아야할 사람의 수(n)보다 많거나 같을 경우에는 시간이 충분했던 것이므로 현재 기준 값으로 갱신한 후, 주어진 시간을 줄이고 
#        2. 심사 받아야할 사람의 수(n)보다 적은 경우에는 시간이 부족했던 것이므로 주어진 시간을 늘린다.

def solution(n, times):
    answer = 0
    
    start = min(times)                  # 문제에서 입국심사 기다리는 사람은 최소 1명이상이라고 했으므로 1명의 최소 대기시간으로 초기화
    end = max(times) * n                # 최대가 될 수 있는 대기시간
    
    while start <= end:
        mid = (start + end) // 2        # 모든 심사관들에게 주어진 시간인 기준 시간을 가운데 값으로 갱신
        total_people = 0                # 기준 시간에서의 심사 가능한 사람의 수 초기화
        
        for t in times:
            total_people += mid // t    # 기준 시간에서 현재 시간을 나누어 심사 가능한 사람의 수를 추가
            
            if total_people >= n:       # 현재까지 심사 가능한 사람의 수가 n명이상의 심사를 할 수 있다면 다음 심사관을 거치지 않아도 되므로
                break                   # 반복 종료
        
        if total_people >= n:           # 심사한 사람의 수가 심사 받아야할 사람의 수(n)보다 많거나 같은 경우 시간이 충분했던 것이므로
            answer = mid                # 정답을 현재 기준 값으로 갱신하고
            end = mid - 1               # 중간값 기준 왼쪽 범위로 탐색 경로 설정
        else:                           # 심사한 사람의 수가 심사 받아야할 사람의 수(n)보다 적은 경우
            start = mid + 1             # 중간값 기준 오른쪽 범위로 탐색 경로 설정
    
    return answer