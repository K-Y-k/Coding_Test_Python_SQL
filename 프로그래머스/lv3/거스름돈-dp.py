# ex) 3원으로 5원을 만들 수 있는 경우의 수는 2원을 만들 수 있는 경우의 수에 3원을 더한거와 같기에 점화식을 적용해 나갈 수 있다.

# 하지만 이 문제는 단순히 f(n) = f(n - 동전종류1) + f(n - 동전종류2) 같은 형태가 아니라 어려운 것이다.
# 이렇게 적용하면 중복되는 경우가 발생하기 때문이다.
# 그래서 만들어질 수 있는 돈(dp)을 순회하는 것이 아닌 돈의 종류를 기준으로 순회하는 방식으로 해야한다.

# 거스름돈을 오름차순으로 정렬해준 후
# 거스름돈의 종류를 차례로 조회해가며 
# 현재 거스름돈부터 문제에서 주어진 가격까지 조회해가며
# 주어진 가격에서 조회한 가격으로 빼가는 점화식을 적용해간다.

def solution(n, money):
    answer = 0
    
    dp = [0] * (n+1)
    money.sort()
    
    for i in money:
        for j in range(i, n+1):
            if j - i == 0:           # 거스름돈이 0원일 때도 하나의 경우의 수가 있기 때문에 
                dp[j] += 1           # 하나의 경우의 수를 추가한 것
            else:
                dp[j] += dp[j - i]
    
    answer = dp[n] % 1000000007
    
    
    return answer