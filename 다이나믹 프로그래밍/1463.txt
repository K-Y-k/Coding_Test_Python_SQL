X = int(input())                                   # 입력 값 선언

d = [0]*(X+1)                                     # 결과는 입력 값의 크기 보다는 작으므로 이렇게 초기화

# 낮은 값부터 비교하는 이유는 최솟값을 편하게 구하기 위해서이다.
d[1] = 0                                            # 제일 작은 크기인 1일 때의 값 초기화 해놓기

for i in range(2, X+1) :                         # 가장 작은 문제(2)부터 가장 큰 문제(입력한 값 X)까지 반복
                                                       # 작은 값부터 값을 구하기 시작했으므로 큰 값에서 작은 값의 d[i] 나누어질 때 이미 구해졌으므로 계산되어짐     
   # 낮은 값부터 비교하는 이유는 최솟값을 편하게 구하기 위해서이다.
    d[i] = d[i-1] + 1                             # N -> N-1 횟수

    if i % 2 == 0 and d[i] > d[i//2] +1 :   # N -> N/2 횟수 and d[i] > d[i//2] +1은 2일 때 해당 안되기에
        d[i] = d[i//2] + 1

    if i % 3 == 0 and d[i] > d[i//3] +1 :   # N -> N/3 횟수  and d[i] > d[i//3] +1은 3일 때 해당 안되기에
        d[i] = d[i//3] + 1 

        
print(d[X])                                          # 결과 출력






def greedy_fn(n) :  # 이 방식은 그리디 방식으로 최소의 값으로 구하는 것이 아님
    cnt = 0
    while True :
        if n == 1 :
            break
        elif n % 3 == 0 :
            n //= 3
            cnt += 1
        elif n % 2 == 0 :
            n //= 2
            cnt += 1
        else : 
            X -= 1
            cnt += 1  
    return cnt
