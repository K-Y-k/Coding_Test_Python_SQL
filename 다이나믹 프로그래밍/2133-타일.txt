# 홀수일 때는 타일을 채울 수 없으므로 0을 출력해야한다.
# 짝수일 때 점화식
1) n에 대해서 n-2 까지의 dp 값에 가로길이 2 짜리 타일로 만들수 있는 3가지 경우를 곱한 경우
   -> dp[n-2] * 3
2) n에 대해서 0~n-4까지의 타일 뒤에 자신을 붙혀서 만들 수 있는 2가지 경우를 곱한 경우 
    -> ( dp[0] + dp[2] + ... dp[n-4] ) * 2
3) n에 대해서 가로 길이 n짜리의 새로운 타일 덩어리를 만드는 2가지 경우
   -> 2


N = int(input())

d = [0] * 31     

d[1] = 3

for i in range(3, N, 2):                      # 짝수마다이지만 0부터 시작이므로 홀수 간격으로 반복하게 했다.
    d[i] = d[i-2]*3 + sum(d[:i-2])*2 + 2  # 위 점화식 3가지 케이스를 모두 더한 것
        
print(d[N-1])