# 예시를 들면 N이 2, M이 3이면 [1][2]+ [2][2] = 1+2 = 3이 되는 것을 확인할 수 있다. 
# 즉, 점화식이 d[N][M] = d[N-1][M-1] + d[N][M-1]이다.
# 주의점은 
#  1.N이 1일 때는 M개의 경우의 수가 있으므로 이를 따로 초기화해야하고
#  2.N과 M이 같을 때는 총 1가지만 나오므로 따로 초기화해야한다.


d = [[0] * 31 for _ in range(31)]                  # 문제에서 주어진 범위﻿(0 < N ≤ M < 30)만큼 초기화

for i in range(31):                                # N이 1일 때는 M개의 경우의 수가 있으므로 이를 따로 초기화
    d[1][i] = i
    
for i in range(2, 31):                             # 1일 때는 초기화했으므로 2부터 시작
    for j in range(i, 31):                         # 다리가 겹치지 않는다 했으므로 i번째부터 시작해야함
        if i == j:                                 # N과 M이 같을 때는 경우의 수가 1개이므로 따로 적용
            d[i][j] = 1
        else:                                      # 그 외는 점화식 적용
            d[i][j] = d[i-1][j-1] + d[i][j-1]

T = int(input())
for _ in range(T):
    N, M = map(int, input().split())
    print(d[N][M])