# 5개의 번호표가 뽑히고 번호표가 랜덤으로 대기하는 학생들이 있으면
# 간식받는 곳에서 1부터 5까지 차례로 받아야 하므로

# 기준값을 1부터 시작해서 대기하는 학생 큐에서 제일 앞의 값을 빼오면서 
# 기준값이랑 같으면 현재 기준값을 충족했으므로 1올려주어 다음 기준값을 비교하게 만들고
# 기준값이랑 다르면 한명씩만 설수 있는 공간에 배치시킨다.

# 그후 한명씩만 설수 있는 공간에도 기준값이랑 일치할 때까지 확인해주고
# 위 모든 작업이 끝났는데도 한명씩만 설수 있는 공간에 학생이 있으면 간식을 못받는 상황으로 Sad 출력하고 없으면 모두 받을 수 있으므로 Nice를 출력한다.

# 내가 부족했던 점
# 스택의 반복으로 비교하는 부분을 대기 큐 반복 다음 바깥에서 진행했었다. 
# 대기 큐 반복의 안쪽에서 진행해야한다.
# 왜냐하면 기준값이 충족할 때 기준값이 1이 올라갈 변경된 상태인데 
# 이 기준값일 때 스택 부분에서 일치하는 경우가 있을 수 있기 때문이다.

from collections import deque

N = int(input())

stu_q = deque(list(map(int, input().split())))
stack = []
target = 1                       # 기준값을 1부터 시작해서 대기하는 학생 큐에서 제일 앞의 값을 빼오면서 


while stu_q:                     # 대기하는 학생 큐에서
    a = stu_q.popleft()          # 제일 앞의 값을 빼오면서 

    if a == target:              # 기준값이랑 같으면
        target += 1              # 기준값이랑 같으면 현재 기준값을 충족했으므로 1올려주어 다음 기준값을 비교하게 만들고
    
    else:                        # 기준값이랑 다르면
        stack.append(a)          # 한명씩만 설수 있는 공간에 배치시킨다.


    while stack:                 # 그후 한명씩만 설수 있는 공간에도 기준값이랑 일치할 때까지 확인해주고
        if stack[-1] == target:
            stack.pop()
            target += 1
        else:
            break


if stack:                        # 위 모든 작업이 끝났는데도 한명씩만 설수 있는 공간에 학생이 있으면
    print('Sad')                 # 간식을 못받는 상황으로 Sad 출력하고

else:                            # 한명씩만 설수 있는 공간에 학생이 없으면
    print('Nice')                # 모두 받을 수 있으므로 Nice를 출력한다.

